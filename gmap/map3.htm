<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Google Maps JavaScript API Example - simple</title>
	<script src="jquery/jquery-1.3.2.min.js" type="text/javascript"></script>
	<script src="jquery/jquery-ui-1.7.2.custom.min.js" type="text/javascript"></script>
	
	<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript" ></script>
	<script src="code.js"></script>
	<link href="style.css" rel="stylesheet" type="text/css" />
	<link href="themes/black-tie/jquery-ui-1.7.2.custom.css" rel="stylesheet" type="text/css" />
	<script src="jquery.blockUI.js" type="text/javascript"> </script>
	<script src="jquery/jquery.easing.1.3.js" type="text/javascript"></script>
	<!-- Make the document body take up the full screen -->
	<script type="text/javascript" src="infobubble.js"></script>
	<style type="text/css">
		v\:* {behavior:url(#default#VML);}
		html, body {width: 100%; height: 100%}
		body {margin-top: 0px; margin-right: 0px; margin-left: 0px; margin-bottom: 0px}
	</style>
	<script>
	//http://webtips.dan.info/graceful.html

	$(document).ready(function() {

		//Transition you want :)
		var easing_type = 'easeOutBounce';
		
		//The default height for the dock (on mouse out)
		var default_dock_height = '40';
		
		//Expanded height, the height of the dock on mouse over, you have to set it in CSS
		var expanded_dock_height = $('#dock').height();
		
		//Fake body height
		var body_height = $(window).height() - default_dock_height;
		
		//Set the size of #fake_body
		$('#fake-body').height(body_height);
		
		//Set the CSS attribute for #dock
		$('#dock').css({'height': default_dock_height, 'position':'absolute', 'top': body_height});
		
		//In case the user resize the browser, we will need to recalculate the height and top for #fake_body and #dock
		$(window).resize(function () {
			
			//Grab the updated height/top
			updated_height = $(window).height() - default_dock_height;
			
			//Set the updated height for #fake_body and top for #dock
			$('#fake-body').height(updated_height);		
			$('#dock').css({'top': updated_height});
		});
			
		//The main event for the dock bottom menu
		$('#dock').mouseover(function () {
			
			//Recalculate expanded height (always get the latest height), in case user has resized the window
			expanded_height = $(window).height() - expanded_dock_height;
			
			//Animate the height change, set the height to expanded_dock_height and set the top value as well
			$(this).animate({'height':expanded_dock_height,'top': expanded_height},{queue:false, duration:800, easing: easing_type});
			
		}).mouseout(function () {
			
			//Recalculate default body height (always get the latest height), in case user has resized the window
			body_height = $(window).height() - default_dock_height;
			
			//Animate the height change, set the height to default_dock-height and set the top value as well
			$(this).animate({'height':default_dock_height,'top': body_height},{queue:false, duration:800, easing: easing_type});
			
		});
		
	});

	</script>
	<style>
		/* 
		margin and padding must be 0,
		otherwise, you have to set it in jQuery
		*/
		body {
		margin:0; 
		padding:0
		}

		#fake-body {
		overflow:auto;
		z-index:1;
		}

		#dock {
		background:#ccc url(bg.gif) repeat-x;
		height:200px;
		z-index:100;
		width:100%;
		}
	</style>
	<script type="text/javascript">
	$(function(){
		$('.button').hover(function(){
			$(this).addClass('buttonhover');
			}, function(){
			$(this).removeClass('buttonhover');
			}
		);
	});

	$(function()
	{
			//all hover and click logic for buttons
			$(".fg-button:not(.ui-state-disabled)")
			.hover(
					function(){
							$(this).addClass("ui-state-hover");
					},
					function(){
							$(this).removeClass("ui-state-hover");
					}
			)
			.mousedown(function(){
							$(this).parents('.fg-buttonset-single:first').find(".fg-button.ui-state-active").removeClass("ui-state-active");
							if( $(this).is('.ui-state-active.fg-button-toggleable, .fg-buttonset-multi .ui-state-active') ){ $(this).removeClass("ui-state-active"); }
							else { $(this).addClass("ui-state-active"); }
			})
			.mouseup(function(){
					if(! $(this).is('.fg-button-toggleable, .fg-buttonset-single .fg-button,  .fg-buttonset-multi .fg-button') ){
							$(this).removeClass("ui-state-active");
					}
			});
	});

	function createContextMenu(map)
	{
		/**
		 * Create the menu and attached it to the map
		 */
		var menu = new contextMenu({map:map});

		// Add some items to the menu
		menu.addItem('Zoom In', function(map, latLng){
			map.setZoom( map.getZoom() + 1);
			map.panTo( latLng );
		});

		menu.addItem('Zoom Out', function(map, latLng){
			map.setZoom( map.getZoom() - 1 );
			map.panTo(latLng);
		});

		menu.addSep();

		menu.addItem('Center Here', function(map, latLng){
			map.panTo(latLng);
			g_circle_marker.setPosition(map.getCenter());
			readCircleMarker();
		});
		
		menu.addSep();
		
		menu.addItem('Explore', function(map, latlng){
			showExploreDlg(latlng);
		});
	}
	
	function createCommands()
	{
		$('#btnConfirmExplore').click(function() {
			$.unblockUI();
			
			// update the block message
			var lat=parseFloat($('input[name="txtExploreLatitude"]').val());
			var lng=parseFloat($('input[name="txtExploreLongitude"]').val());
			var radius=parseFloat($('input[name="txtExploreRadius"]').val());
			
			g_circle.setRadius(radius);
			g_map.panTo(new google.maps.LatLng(lat, lng, true));
			g_circle_marker.setPosition(g_map.getCenter());
			readCircleMarker();
			
			
			return true;
		});
		
		$('#btnCancelExplore').click(function() {
			$.unblockUI();
			return false;
		});
		
		$('#btnMoveCircleMarker').click(function(){
			var address=$('input[name="txtCircleMarkerAddress"]').val();
			var radius=parseInt($('input[name="txtCircleMarkerRadius"]').val());
			g_circle.setRadius(radius);
			g_geocoder.geocode( { 'address': address}, function(results, status) {
			if (status == google.maps.GeocoderStatus.OK) {
				g_map.setCenter(results[0].geometry.location);
				g_circle_marker.setPosition(g_map.getCenter());
			} else {
				alert("Geocode was not successful for the following reason: " + status);
			}
			});
			
			return false;
		});
	}
	
	function showExploreDlg(latlng)
	{
		$('input[name="txtExploreLatitude"]').val(''+latlng.lat());
		$('input[name="txtExploreLongitude"]').val(''+latlng.lng());
		
		g_geocoder.geocode({'latLng': latlng}, function(results, status) {
		  if (status == google.maps.GeocoderStatus.OK) {
			if (results[1]) {
			  $('input[name="txtExploreAddress"]').val(''+results[1].formatted_address);
			}
		  } else {
			alert("Geocoder failed due to: " + status);
		  }
		});
		
		$.blockUI({ message: $('#dlgExplore'), css: { width: '575px' } });
	}
	
	var g_circle_marker=null;
	var g_circle=null;
	function createCircleMarker(map)
	{
		var markerImage = new google.maps.MarkerImage('http://maps.google.com/mapfiles/kml/pal3/icon23.png',
                new google.maps.Size(30, 30),
                new google.maps.Point(0, 0),
                new google.maps.Point(15, 15));
				
		// Create a draggable marker which will later on be binded to a
        // Circle overlay.
        g_circle_marker = new google.maps.Marker({
          map: map,
          position: map.getCenter(),
          draggable: true,
          title: 'Drag me!',
		  icon: markerImage
        });

        // Add a Circle overlay to the map.
        g_circle = new google.maps.Circle({
          map: map,
          radius: 3000 // 3 km
        });

        // Since Circle and Marker both extend MVCObject, you can bind them
        // together using MVCObject's bindTo() method.  Here, we're binding
        // the Circle's center to the Marker's position.
        // http://code.google.com/apis/maps/documentation/v3/reference.html#MVCObject
        g_circle.bindTo('center', g_circle_marker, 'position');
		
		google.maps.event.addListener(g_circle_marker, 'dragend', function() {
			readCircleMarker();
		});
		google.maps.event.addListener(g_circle_marker, 'rightclick', function()
		{
			showExploreDlg(g_circle_marker.getPosition());
		});
	}
	
	function listMarkers()
	{
		var post_data="";
		var lat=g_circle_marker.getPosition().lat();
		var lng=g_circle_marker.getPosition().lng();
		var radius=g_circle.getRadius();
		post_data+=("lat="+lat);
        post_data+=("&lng="+lng);
		$.getJSON(
				"json.php?lat="+lat+"&lng="+lng+"&radius="+radius,
				function(data) {
					$.each(data.markers, function(index, marker) 
					{
						addMarker(new google.maps.LatLng(marker.lat, marker.lng), marker);
					}
					);
				}
		);		
	}
	
	function readCircleMarker()
	{
		deleteOverlays();
		listMarkers();
		
		var latlng=g_circle_marker.getPosition();
		g_geocoder.geocode({'latLng': latlng}, function(results, status) {
		  if (status == google.maps.GeocoderStatus.OK) {
			if (results[1]) {
			  $('input[name="txtCircleMarkerAddress"]').val(''+results[1].formatted_address);
			  $('#statusBarInfo').html(results[1].formatted_address);
			}
		  } else {
			alert("Geocoder failed due to: " + status);
		  }
		});
	}

	function addMarker(location, marker_data) 
	{
		var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';
	
		marker = new google.maps.Marker({
			position: location,
			map: g_map,
			icon: iconBase + 'schools_maps.png'
		});
		
		var  infoBubble = new InfoBubble({
          maxWidth: 500
        });

        var div_household = document.createElement('DIV');
		var div_content =  '<a href="../index.php?r=marker/view&id='+marker.id+'" target="_blank"><b>'+marker_data.name+'</b></a><br />';
		div_content += marker_data.description;
		div_content += '<hr />';
		div_content += marker_data.address;
		div_content += '<hr />';
		div_content += '<b>Price</b>: $'+marker_data.price+'<br />';
		div_content += ('<b>Last Updated</b>: '+marker_data.update_time+'<br />');
		div_content += ('<b>Type</b>: '+marker_data.data_type);
		div_content += '<hr />';
		div_content += 'Created by: <a href="../index.php?r=user/view&id='+marker_data.create_user_id+'" target="_blank">'+marker_data.firstname+', '+marker_data.lastname+'</a>';
        div_household.innerHTML = div_content;
        infoBubble.addTab('Household', div_household);
		
		var div_contact = document.createElement('DIV');
		div_content = '<a href="../index.php?r=user/view&id='+marker_data.create_user_id+'" target="_blank">'+marker_data.firstname+', '+marker_data.lastname+'</a><br />';
		div_content += marker_data.user_description;
		div_content += '<hr />';
		div_content += '<b>First Name</b>: '+marker_data.firstname+'<br />';
		div_content += '<b>Last Name</b>: '+marker_data.lastname+'<br />';
		div_content += '<hr />';
		div_content += '<b>Tel</b>: '+marker_data.phone_number+'<br />';
		div_content += '<b>Mobile</b>: '+marker_data.mobile+'<br />';
		div_content += '<hr />';
		div_content += '<b>Email</b>: '+marker_data.email+'<br />';
		div_content += '<b>Website</b>: '+marker_data.url+'<br />';
		div_contact.innerHTML = div_content;
        infoBubble.addTab('Contact', div_contact);
		
		var div_photos = document.createElement('DIV');
		div_content = '';
		
		if(marker_data.image_link1!="")
		{
			div_content += '<img width="200" height="130" src="'+marker_data.image_link1+'" />';
		}
		
		if(marker_data.image_link2!="")
		{
			div_content += '<img width="200" height="130" src="'+marker_data.image_link2+'" />';
		}
		
		if(marker_data.image_link3!="")
		{
			div_content += '<img width="200" height="130" src="'+marker_data.image_link3+'" />';
		}
		
		if(marker_data.image_link4!="")
		{
			div_content += '<img width="200" height="130" src="'+marker_data.image_link4+'" />';
		}
		div_photos.innerHTML = div_content;
		
		infoBubble.addTab('Photos', div_photos);
		
		var div_video = document.createElement('DIV');
		div_content = '';
		if(marker_data.video_link != "")
		{
			div_content='<iframe width="400" height="260" src="//'+marker_data.video_link+'" frameborder="0" allowfullscreen></iframe>'; 
		}
		div_video.innerHTML = div_content;
		infoBubble.addTab('Video', div_video);

        google.maps.event.addListener(marker, 'click', function() {
          if (!infoBubble.isOpen()) {
            infoBubble.open(g_map, marker);
          }
        });
		
		g_markersArray.push(marker);
	}

	// Removes the overlays from the map, but keeps them in the array
	function clearOverlays() {
	  if (markersArray) {
		for (i in markersArray) {
		  markersArray[i].setMap(null);
		}
	  }
	}
	
	// Deletes all markers in the array by removing references to them
	function deleteOverlays() {
	  if (g_markersArray) {
		for (i in g_markersArray) {
		  g_markersArray[i].setMap(null);
		}
		g_markersArray.length = 0;
	  }
	}
   
	var g_map=null;
	var g_geocoder=null;
	var g_markersArray = [];
	$(function() 
	{
		g_geocoder = new google.maps.Geocoder();
		var latlng = new google.maps.LatLng(1.344456, 103.680969);
		var myOptions = {
		  zoom: 12,
		  center: latlng,
		  mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		g_map = new google.maps.Map(document.getElementById("map_canvas"),
			myOptions);
		 
		createCircleMarker(g_map);
		createContextMenu(g_map);
		createCommands();
	});

</script>
</head>
<body>

  <div id="fake-body">
	<!-- Declare the div, make it take up the full document body -->
  <div id="map_canvas" style="width: 100%; height: 100%;"></div>
  
  <div id="dlgExplore" style="display:none; cursor: default">
        <table width="99.9%">
            <caption style="background:url(themes/smoothness/images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x"><h3>Explore Dialog</h3></caption>
            <tr>
                <td align="left">Latitude:</td>
                <td align="left"><input id="txtExploreLatitude" name="txtExploreLatitude" value="default" type="textfield" style="width:80%" disabled="true" /></td>
				<td align="left">Longitude:</td>
                <td align="left"><input id="txtExploreLongitude" name="txtExploreLongitude" value="default" type="textfield" style="width:80%" disabled="true"/></td>
            </tr>

			<tr>
                <td align="left">Address:</td>
                <td align="left" colspan="3"><input id="txtExploreAddress" name="txtExploreAddress" value="default" type="textfield" style="width:92%" disabled="true"/></td>
            </tr>
			
			<tr><td colspan="4"><hr/></td><tr>
			
			<tr>
                <td align="left">House Type:</td>
                <td align="left"><input id="txtExploreHouseType" name="txtExploreHouseType" value="HDB" type="textfield" style="width:80%"/></td>
				<td align="left">Radius (m):</td>
                <td align="left"><input id="txtExploreRadius" name="txtExploreRadius" value="3000" type="textfield" style="width:80%"/></td>
            </tr>
			
			<tr><td colspan="4"><hr/></td><tr>

            <tr>
                <td colspan="2"></td>
                <td colspan="2"  align="right">
                    <button id="btnConfirmExplore" class="fg-button ui-state-default ui-corner-all">Explore</button>
                    <button id="btnCancelExplore" class="fg-button ui-state-default ui-corner-all">Cancel</button>
                </td>
            </tr>
        </table>
        
  </div>


</div>

<div id="dock">
	<table width="99.9%">
            <caption style="height:50px;text-valign:middle"><div id="statusBarInfo" style="margin-top:10px;" /></caption>
			
			<tr>
                <td align="left">Address:</td>
                <td align="left" colspan="3"><input id="txtCircleMarkerAddress" name="txtCircleMarkerAddress" value="Singapore" type="textfield" style="width:92%"/></td>
				 <td align="left">Radius (meters):</td>
				<td align="left" colspan="1"><input id="txtCircleMarkerRadius" name="txtCircleMarkerRadius" value="3000" type="textfield" style="width:92%"/></td>
            </tr>
			
			<tr><td colspan="6"><hr/></td><tr>

            <tr>
                <td colspan="6"></td>
                <td colspan="2"  align="right">
                    <button id="btnMoveCircleMarker" class="fg-button ui-state-default ui-corner-all">Find</button>
                </td>
            </tr>
    </table>
</div>
  

</body></html>

